// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	service "challenge/internal/service"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RabbitmqService is an autogenerated mock type for the RabbitmqService type
type RabbitmqService struct {
	mock.Mock
}

// PublishChanges provides a mock function with given fields: ctx, entity, entityName, action
func (_m *RabbitmqService) PublishChanges(ctx context.Context, entity interface{}, entityName service.EntityType, action service.Action) error {
	ret := _m.Called(ctx, entity, entityName, action)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, service.EntityType, service.Action) error); ok {
		r0 = rf(ctx, entity, entityName, action)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRabbitmqService interface {
	mock.TestingT
	Cleanup(func())
}

// NewRabbitmqService creates a new instance of RabbitmqService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRabbitmqService(t mockConstructorTestingTNewRabbitmqService) *RabbitmqService {
	mock := &RabbitmqService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
